"This book and subject is literally the devil and am glad I finished and graduated so I don\u2019t have to touch that god forsaken subject ever again",
"This book is actually fantastic - just using it to learn my course on the Theory of Computation.",
"In my opinion, Arora and Barak's [Computational Complexity](https://theory.cs.princeton.edu/complexity/) is a better-written introduction to all things complexity (but not automata or computability), and also includes succinct introductions to more \"modern\" topics such as cryptography, quantum computation, and (de-)randomization.",
"Came here to post this. Glad I didn't have to scroll to see it.",
"Sounds like good supplement to the text.",
"It's by far the best book on the subject. I've said it before, but I highly recommend Shai Simonson's course on the subject. It's on YouTube and it's based on the book, but a little bit less formal. He stills answers all the formal questions with in depth answers.",
"Was going to post this as well. Absolutely fantastic book.",
"Was going to recommend this, excellent textbook",
"[Introduction to the Theory of Computation](http://mheidari.me/sites/default/files/book/Introduction%20to%20the%20theory%20of%20computation\\_third%20edition%20-%20Michael%20Sipser.pdf) by Michael Sipser. Great introduction to Formal Language Theory.",
"Introduction to Algorithms by CLRS and The Art of Computer Programming by Knuth",
"YouTube + StackOverflow",
"The Internet",
"I posted the same thing. It's a brilliant book! They have a course on courser as well.",
"The Elements of Computing Systems: Building a Modern Computer from First Principles\n\nby Noam Nisan and Shimon Schocken",
"Data Structures Using C and C++ by Tanenbaum, Langsam, and Augenstein. Hands down. It opened my mind and actually made me think.",
"TAOCP",
"Russell and Norvig's Artificial Intelligence is nice.",
"Programming language concepts, taught by Dr. Anderson. It's a nightmare of a class to take, but you learn so much.",
"Thanks a lot for the recommendation on the signal processing book! It looks very interesting. It's going on my to read list.",
"Probably Algorithms in C++ parts 1-4 by R. Sedgewick. I read this book in highschool, and it is partly responsible for me chosing a career in CS.\n\nAnd this is very specific, but one of the most eye opening books I ever read was \"The Scientist and Engineer's Guide to Digital Signal Processing\" by Steven W. Smith. You can find it for free [here](http://www.dspguide.com/pdfbook.htm). This book covers signal filtering using the fast fourier transform algorithm (and variants) in an easily digestible way. This subject bridges an unfortunate gap between mechanical (control), electrical engineering and CS curriculums.",
"IALC and CPTT by Jeff Ullman et al.",
"Introduction to Algorithms by Cormen et al.",
"[https://www.nand2tetris.org](https://www.nand2tetris.org) is great course - there's a book on the subject and also 2 courses on coursera. It starts by building a computer from the ground up, learning how numbers are represented, memory is designed, how to make your own processor, machine language and writing your own assembler. It then continues to write your own compiler, operating system, etc. It's a great course to get a thorough understanding of computers in general.",
"- CS50 - Introductory, obviously.\n- [Computerphile](https://www.youtube.com/channel/UC9-y-6csu5WGm29I7JiwpnA)",
"If you're interested, I assembled and inter-weaved videos from various authors to teach the full scope of programming, starting with the basic physics of charged particles and electric circuits, then on to logic gates, programmable circuits, and CPUs, and finally interpreting and compiling high-level source code into machine instructions.\n\nhttps://www.youtube.com/playlist?list=PLCU91Hehm1PeaehvUysVzdK3ATM6Lwqf7",
"thanks!",
"Structure and Implementation of Computer Programs.",
"What is SICP?",
"SICP. It made me cry a couple of times but it's such an amazing text.",
"This question is very vague tbh. CS is an umbrella for at least a dozen different types of  topics. Ranges from the system side of OS, Computer Organization and architecture to DBMS to web services to machine learning. You need to be specific to get specific answers.",
"Introduction to Algorithms, by Cormen et al.",
"Hands-on Machine Learning with Scikit-learn and Tensorflow. \n\nThere's a new edition updated for TF 2.0, but I haven't checked it out yet",
"a few lisp books for the linguistic abstraction side of things, some Aho book, the Cormen ?",
"I quite enjoyed information security: principles and practice by Mark Stamp (ISBN 9780470626399)",
"Used this, pretty good book\n\n\n[theory to computation](https://www.goodreads.com/book/show/400716.Introduction_to_the_Theory_of_Computation)",
"the Structure and Interpretation of Computer Programs (SICP) by Abelson, Sussman and Sussman is my pick for the best computer science textbook of all time. it's great because it teaches important intuitions about how to express computations in programs and how to think about algorithms. i credit SICP for teaching me all my intuitions about how to approach problems, and i love that it doesn't waste too much time getting bogged down teaching about any particular language or framework (it teaches some scheme in passing to demonstrate concepts, but scheme was chosen because it's a tiny and easy-to-learn language, not because students were expected to go on to rich careers writing scheme).",
" I read [The Annotated Turing by Charles Petzold](https://www.amazon.com/Annotated-Turing-Through-Historic-Computability/dp/0470229055) while I was in high school and it really sparked my love for logic, math and computer science. So, as far as popular science books go, I can't *not* recommend it.  \n\nRight now I'm interested in programming languages, and I think [TAPL](https://www.cis.upenn.edu/~bcpierce/tapl/) is a great resource. The (relatively) new blog [PL Perspectives](https://blog.sigplan.org/2019/06/22/welcome/) is also pretty cool, and so is /r/ProgrammingLanguages.",
"Aluminum",
"https://en.wikipedia.org/wiki/De_Casteljau%27s_algorithm#Geometric_interpretation - I get sweet smooth curves that are easy to compute and all because Citro\u00ebn wanted lovely lines on their cars.",
"The full definition of asymptotic computational complexity.\n\nAmazing the number of times, in industry, that \"for sufficiently large numbers of n\" is cargo-culted out of consideration",
"Operating Systems: Three Easy Pieces. It's the only CS text I have truly been excited to read more of.",
"Harvard CS50 introduction videos are so amazing",
"anyone who says anything other than stackoverflow is lying to themselves",
"Stackoverflow",
"Internships / jobs, hobby projects, google. Pull enough hair out and you make room for knowledge.",
"Rails for Zombies was a great interactive tutorial on getting started on Ruby on Rails. I used to recommend it to all my students who were learning web development for the first time.\n\nUnfortunately, it was taken over (acquired?) by Plural Sight and it no longer has the free first \"course.\" However, if you want to be a Rails developer, it may be worth the money.",
"I like em. Someone gave me a book when i was getting started and it did a fine job i think",
"Packt publishing is trash. They mass produce seemingly technical books with shallow content. Please stop spewing bullshit.",
"Packt by far has the best textbooks",
